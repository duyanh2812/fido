#!/bin/bash

echo "üîß Testing with Official WSO2 IS Image"
echo "======================================"
echo ""
echo "üìã Changes made:"
echo "   ‚úÖ Changed from: ngoduyanh/wso2is-custom-permission-fixed:latest"
echo "   ‚úÖ Changed to: wso2/wso2is:7.1.0 (Official WSO2 IS image)"
echo ""
echo "üîç What this means:"
echo "   - Using official WSO2 IS 7.1.0 image from Docker Hub"
echo "   - No custom data or configurations from localhost"
echo "   - Fresh WSO2 IS instance with default settings"
echo "   - Configuration will be applied via deployment-aws.toml volume mount"
echo ""
echo "‚ö†Ô∏è  Important Notes:"
echo "   - You'll need to configure WSO2 IS manually:"
echo "     1. Create Service Provider: FIDO_POC_App"
echo "     2. Set OAuth2 Client ID: jDsWosgzDKXGRUPHXhLnlm1wQQ8a"
echo "     3. Set OAuth2 Client Secret: bklLE13ZYmYY9Rr_72fRhkY9wnNleF_aDVf52KVI_rga"
echo "     4. Set Callback URL: https://fido.18.143.154.126.nip.io/oauth2/code/wso2"
echo "     5. Configure FIDO2 settings"
echo ""
echo "üöÄ To test with official WSO2 IS:"
echo "   1. Pull latest images:"
echo "      docker-compose pull"
echo ""
echo "   2. Start services:"
echo "      docker-compose up -d"
echo ""
echo "   3. Access WSO2 IS Console:"
echo "      https://wso2.18.143.154.126.nip.io:9443/carbon"
echo "      Username: admin"
echo "      Password: admin"
echo ""
echo "   4. Configure Service Provider manually"
echo ""
echo "   5. Test FIDO App:"
echo "      https://fido.18.143.154.126.nip.io"
echo ""
echo "üì¶ Images being used:"
echo "   - WSO2 IS: wso2/wso2is:7.1.0 (Official)"
echo "   - FIDO App: ngoduyanh/fido-app:latest (Custom)"
echo ""
echo "üéØ This approach gives you:"
echo "   ‚úÖ Official WSO2 IS with latest updates"
echo "   ‚úÖ No dependency on custom WSO2 image"
echo "   ‚úÖ Clean WSO2 IS instance"
echo "   ‚ö†Ô∏è  Requires manual configuration"


